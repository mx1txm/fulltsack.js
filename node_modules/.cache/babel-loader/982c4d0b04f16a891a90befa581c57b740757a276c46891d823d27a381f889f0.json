{"ast":null,"code":"import { throwServerError } from \"../utils/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function parseAndCheckHttpResponse(operations) {\n  return function (response) {\n    return response.text().then(function (bodyText) {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        var parseError = err;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    }).then(function (result) {\n      if (response.status >= 300) {\n        throwServerError(response, result, \"Response not successful: Received status code \" + response.status);\n      }\n      if (!Array.isArray(result) && !hasOwnProperty.call(result, 'data') && !hasOwnProperty.call(result, 'errors')) {\n        throwServerError(response, result, \"Server response was missing for query '\" + (Array.isArray(operations) ? operations.map(function (op) {\n          return op.operationName;\n        }) : operations.operationName) + \"'.\");\n      }\n      return result;\n    });\n  };\n}","map":{"version":3,"names":["throwServerError","hasOwnProperty","Object","prototype","parseAndCheckHttpResponse","operations","response","text","then","bodyText","JSON","parse","err","parseError","name","statusCode","status","result","Array","isArray","call","map","op","operationName"],"sources":["/Users/meltem/PycharmProjects/fullstack-js/node_modules/@apollo/src/link/http/parseAndCheckHttpResponse.ts"],"sourcesContent":["import { Operation } from '../core';\nimport { throwServerError } from '../utils';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport function parseAndCheckHttpResponse(\n  operations: Operation | Operation[],\n) {\n  return (response: Response) => response\n    .text()\n    .then(bodyText => {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        const parseError = err as ServerParseError;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    })\n    .then((result: any) => {\n      if (response.status >= 300) {\n        // Network error\n        throwServerError(\n          response,\n          result,\n          `Response not successful: Received status code ${response.status}`,\n        );\n      }\n\n      if (\n        !Array.isArray(result) &&\n        !hasOwnProperty.call(result, 'data') &&\n        !hasOwnProperty.call(result, 'errors')\n      ) {\n        // Data error\n        throwServerError(\n          response,\n          result,\n          `Server response was missing for query '${\n            Array.isArray(operations)\n              ? operations.map(op => op.operationName)\n              : operations.operationName\n          }'.`,\n        );\n      }\n      return result;\n    });\n}\n"],"mappings":"AACA,SAASA,gBAAgB,QAAQ,mBAAW;AAEpC,IAAAC,cAAc,GAAKC,MAAM,CAACC,SAAS,CAAAF,cAArB;AAQtB,OAAM,SAAUG,yBAAyBA,CACvCC,UAAmC;EAEnC,OAAO,UAACC,QAAkB;IAAK,OAAAA,QAAQ,CACpCC,IAAI,EAAE,CACNC,IAAI,CAAC,UAAAC,QAAQ;MACZ,IAAI;QACF,OAAOC,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC;OAC5B,CAAC,OAAOG,GAAG,EAAE;QACZ,IAAMC,UAAU,GAAGD,GAAuB;QAC1CC,UAAU,CAACC,IAAI,GAAG,kBAAkB;QACpCD,UAAU,CAACP,QAAQ,GAAGA,QAAQ;QAC9BO,UAAU,CAACE,UAAU,GAAGT,QAAQ,CAACU,MAAM;QACvCH,UAAU,CAACJ,QAAQ,GAAGA,QAAQ;QAC9B,MAAMI,UAAU;;IAEpB,CAAC,CAAC,CACDL,IAAI,CAAC,UAACS,MAAW;MAChB,IAAIX,QAAQ,CAACU,MAAM,IAAI,GAAG,EAAE;QAE1BhB,gBAAgB,CACdM,QAAQ,EACRW,MAAM,EACN,mDAAiDX,QAAQ,CAACU,MAAQ,CACnE;;MAGH,IACE,CAACE,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,IACtB,CAAChB,cAAc,CAACmB,IAAI,CAACH,MAAM,EAAE,MAAM,CAAC,IACpC,CAAChB,cAAc,CAACmB,IAAI,CAACH,MAAM,EAAE,QAAQ,CAAC,EACtC;QAEAjB,gBAAgB,CACdM,QAAQ,EACRW,MAAM,EACN,6CACEC,KAAK,CAACC,OAAO,CAACd,UAAU,CAAC,GACrBA,UAAU,CAACgB,GAAG,CAAC,UAAAC,EAAE;UAAI,OAAAA,EAAE,CAACC,aAAa;QAAhB,CAAgB,CAAC,GACtClB,UAAU,CAACkB,aAAa,QAC1B,CACL;;MAEH,OAAON,MAAM;IACf,CAAC,CAAC;EAzC2B,CAyC3B;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}