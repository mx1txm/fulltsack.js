{"ast":null,"code":"import { InvariantError } from 'ts-invariant';\nexport function validateOperation(operation) {\n  var OPERATION_FIELDS = ['query', 'operationName', 'variables', 'extensions', 'context'];\n  for (var _i = 0, _a = Object.keys(operation); _i < _a.length; _i++) {\n    var key = _a[_i];\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw __DEV__ ? new InvariantError(\"illegal argument: \" + key) : new InvariantError(26);\n    }\n  }\n  return operation;\n}","map":{"version":3,"names":["InvariantError","validateOperation","operation","OPERATION_FIELDS","_i","_a","Object","keys","length","key","indexOf","__DEV__"],"sources":["/Users/meltem/PycharmProjects/fullstack-js/node_modules/@apollo/src/link/utils/validateOperation.ts"],"sourcesContent":["import { InvariantError } from 'ts-invariant';\n\nimport { GraphQLRequest } from '../core';\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,cAAc;AAI7C,OAAM,SAAUC,iBAAiBA,CAACC,SAAyB;EACzD,IAAMC,gBAAgB,GAAG,CACvB,OAAO,EACP,eAAe,EACf,WAAW,EACX,YAAY,EACZ,SAAS,CACV;EACD,KAAgB,IAAAC,EAAA,IAAsB,EAAtBC,EAAA,GAAAC,MAAM,CAACC,IAAI,CAACL,SAAS,CAAC,EAAtBE,EAAA,GAAAC,EAAA,CAAAG,MAAsB,EAAtBJ,EAAA,EAAsB,EAAE;IAAnC,IAAIK,GAAG,GAAAJ,EAAA,CAAAD,EAAA;IACV,IAAID,gBAAgB,CAACO,OAAO,CAACD,GAAG,CAAC,GAAG,CAAC,EAAE;MACrC,MAAME,OAAI,OAAAX,cAAe,qBAA4B,GAAAS,GAAA,QAAAT,cAAA;;;EAIzD,OAAOE,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}