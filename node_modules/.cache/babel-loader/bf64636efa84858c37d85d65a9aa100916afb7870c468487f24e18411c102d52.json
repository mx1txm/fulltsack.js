{"ast":null,"code":"import { invariant } from \"ts-invariant\";\nimport DEV from \"./DEV.js\";\nexport { DEV };\nexport function checkDEV() {\n  __DEV__ ? invariant(\"boolean\" === typeof DEV, DEV) : invariant(\"boolean\" === typeof DEV, 38);\n}\nimport { removeTemporaryGlobals } from \"./graphql.js\";\nexport { removeTemporaryGlobals };\nremoveTemporaryGlobals();","map":{"version":3,"names":["invariant","DEV","checkDEV","__DEV__","removeTemporaryGlobals"],"sources":["/Users/meltem/PycharmProjects/fullstack-js/node_modules/@apollo/src/utilities/globals/index.ts"],"sourcesContent":["import { invariant } from \"ts-invariant\";\n\n// Just in case the graphql package switches from process.env.NODE_ENV to\n// __DEV__, make sure __DEV__ is polyfilled before importing graphql.\nimport DEV from \"./DEV\";\nexport { DEV }\nexport function checkDEV() {\n  invariant(\"boolean\" === typeof DEV, DEV);\n}\n\n// Import graphql/jsutils/instanceOf safely, working around its unchecked usage\n// of process.env.NODE_ENV and https://github.com/graphql/graphql-js/pull/2894.\nimport { removeTemporaryGlobals } from \"./graphql\";\nexport { removeTemporaryGlobals }\n\n// Synchronously undo the global process.env.NODE_ENV polyfill that we created\n// temporarily while importing the offending graphql/jsutils/instanceOf module.\nremoveTemporaryGlobals();\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AAIxC,OAAOC,GAAG,MAAM,UAAQ;AACxB,SAASA,GAAG;AACZ,OAAM,SAAUC,QAAQA,CAAA;EACtBC,OAAA,GAAUH,SAAS,UAAK,KAAU,OAAOC,GAAA,EAAAA,GAAA,IAAAD,SAAA,sBAAAC,GAAA;AAC3C;AAIA,SAASG,sBAAsB,QAAQ,cAAY;AACnD,SAASA,sBAAsB;AAI/BA,sBAAsB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}